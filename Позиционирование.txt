				Методы позиционирования элементов в CSS

 Методы обнуления пробелов между строчными элементами (и если элементы стали inline-block):
- присвоить родительскому блоку размер шрифта 0 (font-size: 0;), а внутренним элементам 
  присваиваем уже нужный размер шрифта;
- пытаться подобрать отрицательный отступ элемента слев (margine: -?px). В основном не используется;
- float: left;  

1. Использование оптикания (float: ;. Это старый способ и поддерживается старыми браузерами.
Чтобы избежать "схлопывание родителей" необходимо либо добавить, после данных элементов
тег (обычно с класом clearfix) и прописывают ему свойство clear: both;, что не совсем удобно (докидывать в код элементы)
Либо прискаивают класс clearfix родительскому элементу, который необходимо пофиксать и прописывают свойства в css

.clearfix:before,        - псевдоєлемент, который предотвращает схлопывание предидущего элемента
.clearfix:after {        - псевдоєлемент, который находиться в конце и прекращает обтикание
	content: '';     - говорим, что у него есть какой-то любой контент (чтобы не схлопывался)
	display: block;  - указываем, что это блочный элемент
	clear: both;     - свойство, которое говорит, что єтот єлемент нельзя оптикать
	float: none;     - способ обезопасить себя, если задано всем, через "*" оптикание, у бифор и афтер - это скинуть
}

2. Центрирование

2.1

  div {
	margin-left: 50%;               - делаем отступ от левого края родительского блока 50%
	transform: translate (-50%, 0); - смещаем наш блок на 50% своей ширины в левую сторону, чтобы блок стал по центру родительского блока
}			
 
В этом случае есть подводные камни. Блок может попасть в субпиксели и будет размытость контура.
Это происходит потому, что при использовании свойства transform css не округляет значение пискселей.
Обычно происходит округление до целого пикселя.

2.2.

 Применение margin: auto; выставляет блок горизонтально по центру

 div {
	margin: auto;
	margin-top: 50%;                - сдвиг блока сверху на 50% родительского блока
	transform: translate (0, -50%); - сдвиг блока вверх на 50% своего размера

3. Позиционирование условно можно поделить на две части: Включенное и Выключенное!
Виды позиционирования: - статик (это значение по умолчанию элемента)
		       - релятив (берет наччало отчета от того места, где его применили, остальные элементы воспринимают данный элемент как  будто он остается на месте )
		       - фиксед (fixed) (берен начала отсчета с левого верхнего угла рабочей области. указывает отношение к сторонам рабочей области. пример, когда хедер остается всегда сверху, при скролле контента)
		       - абсолют (берет начало отсчета от ближайшего элемента с включенным поз. вверх по иерархии)


пример position: fixed;
div {
	position: fixed;
	left: 50%;				выставляет блок по центру єкрана, и он остается на месте при скроле страници
	top: 50%;
	transform: translate(-50%, -50%);
}


4. Флексы (flex) .По умолчанию у флексов считается главным направляющим вектором - Горизонтальный (с лева на право). Второстепенный - Вертикальный (с верху в низ)

Основные правила в флексах задаютя родительскому контейнеру и задают поведение дочерним элементам

div {
	display: flex;
	align-items: center; - выравнивание элементов по Второстепенной (по вертикали)
	justify-content: center;   - выравнивание элемента по главной оси (по горизонтали)
	flex-direction: row; (row - по умолчанию) указывает какая из осей основная вертикаль или горизонталь (row, column, row-reverse, column-reverse - поворот на 180 градусов)
	flex-wrap: nowrap; - по умолчанию свойство кторое говорит, что переносить строки нельзя
	flex-wrap: wrap; - позволяет переносить строки

Изначально предназначены для одной строки либо колони.

